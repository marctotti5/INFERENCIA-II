geom_bar(aes(fill = Correlacion_precio), stat = "identity") +
scale_fill_gradient(low = "blue", high = "red") +
ggtitle("Correlación del precio y las demás variables numéricas.") +
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold", margin = margin(0, 0, 10, 0)),
axis.title = element_text(hjust = 0.5, size = 14),
axis.text.x = element_text(size = 16, angle = 90),
legend.position = "none",
legend.title = element_blank()) +
xlab("Numeric variable") + ylab("Coeficiente de correlación de Pearson") + coord_flip()
## ACCOMMODATES
analisis_descriptivo_accommodates <- filter(analisis_descriptivo_numericas, variable == "accommodates")
histograma_accommodates <- ggplot(data = airbnb_data, aes(x = accommodates)) +
geom_histogram(color = "black", fill = "skyblue", binwidth = 2) +
geom_table_npc(data = analisis_descriptivo_accommodates, label = list(analisis_descriptivo_accommodates),
npcx = 0.00, npcy = 1, hjust = -0.2, vjust = -0.4) +
ggtitle("Número de habitaciones de los apartamentos de Airbnb") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(hjust = 0.5, size = 12),
axis.text = element_text(size = 12)) +
xlab("Número de habitaciones") + ylab("Frecuencia") +
theme(legend.position = "top",
legend.title = element_blank(),
legend.text = element_text(size = 14),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title = element_text(size = 15, face = "bold"),
plot.title = element_text(size = 20, face = 'bold', hjust = 0.5, margin = margin(0, 0, 50, 0)))
boxplot_accommodates <- ggplot(data = airbnb_data, aes(x = accommodates)) +
geom_boxplot(color = "black", fill = "lightgreen") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(hjust = 0.5, size = 12),
axis.text = element_text(size = 12)) +
xlab("Número de habitaciones") + ylab("           ") +
theme(legend.position = "top",
legend.title = element_blank(),
legend.text = element_text(size = 14),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title = element_text(size = 15, face = "bold"),
plot.title = element_text(size = 20, face = 'bold', hjust = 0.5, margin = margin(0, 0, 10, 0)))
grafico_accommodates <- ggarrange(histograma_accommodates, boxplot_accommodates, nrow = 2, ncol = 1, heights = c(1, 0.6))
## BATHROOMS
analisis_descriptivo_bathrooms <- filter(analisis_descriptivo_numericas, variable == "bathrooms")
histograma_bathrooms <- ggplot(data = airbnb_data, aes(x = bathrooms)) +
geom_histogram(color = "black", fill = "skyblue", binwidth = 2) +
geom_table_npc(data = analisis_descriptivo_bathrooms, label = list(analisis_descriptivo_bathrooms),
npcx = 0.00, npcy = 1, hjust = -0.3, vjust = -0.4) +
ggtitle("Número de baños de los apartamentos de Airbnb") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(hjust = 0.5, size = 12),
axis.text = element_text(size = 12)) +
xlab("Número de baños") + ylab("Frecuencia") +
theme(legend.position = "top",
legend.title = element_blank(),
legend.text = element_text(size = 14),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title = element_text(size = 15, face = "bold"),
plot.title = element_text(size = 20, face = 'bold', hjust = 0.5, margin = margin(0, 0, 50, 0)))
boxplot_bathrooms <- ggplot(data = airbnb_data, aes(x = bathrooms)) +
geom_boxplot(color = "black", fill = "lightgreen") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(hjust = 0.5, size = 12),
axis.text = element_text(size = 12)) +
xlab("Número de baños") + ylab("           ") +
theme(legend.position = "top",
legend.title = element_blank(),
legend.text = element_text(size = 14),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title = element_text(size = 15, face = "bold"),
plot.title = element_text(size = 20, face = 'bold', hjust = 0.5, margin = margin(0, 0, 10, 0)))
grafico_bathrooms <- ggarrange(histograma_bathrooms, boxplot_bathrooms, nrow = 2, ncol = 1, heights = c(1, 0.6))
## BEDROOMS
analisis_descriptivo_bedrooms <- filter(analisis_descriptivo_numericas, variable == "bedrooms")
histograma_bedrooms <- ggplot(data = airbnb_data, aes(x = bedrooms)) +
geom_histogram(color = "black", fill = "skyblue", binwidth = 2) +
geom_table_npc(data = analisis_descriptivo_bedrooms, label = list(analisis_descriptivo_bedrooms),
npcx = 0.00, npcy = 1, hjust = -0.3, vjust = -0.4) +
ggtitle("Número de habitaciones de los apartamentos de Airbnb") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(hjust = 0.5, size = 12),
axis.text = element_text(size = 12)) +
xlab("Número de habitaciones") + ylab("Frecuencia") +
theme(legend.position = "top",
legend.title = element_blank(),
legend.text = element_text(size = 14),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title = element_text(size = 15, face = "bold"),
plot.title = element_text(size = 20, face = 'bold', hjust = 0.5, margin = margin(0, 0, 50, 0)))
boxplot_bedrooms <- ggplot(data = airbnb_data, aes(x = bedrooms)) +
geom_boxplot(color = "black", fill = "lightgreen") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(hjust = 0.5, size = 12),
axis.text = element_text(size = 12)) +
xlab("Número de dormitorios") + ylab("           ") +
theme(legend.position = "top",
legend.title = element_blank(),
legend.text = element_text(size = 14),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title = element_text(size = 15, face = "bold"),
plot.title = element_text(size = 20, face = 'bold', hjust = 0.5, margin = margin(0, 0, 10, 0)))
grafico_bedrooms <- ggarrange(histograma_bedrooms, boxplot_bedrooms, nrow = 2, ncol = 1, heights = c(1, 0.6))
## BEDS
analisis_descriptivo_beds <- filter(analisis_descriptivo_numericas, variable == "beds")
histograma_beds <- ggplot(data = airbnb_data, aes(x = beds)) +
geom_histogram(color = "black", fill = "skyblue") +
geom_table_npc(data = analisis_descriptivo_beds, label = list(analisis_descriptivo_beds),
npcx = 0.00, npcy = 1, hjust = -0.3, vjust = -0.4) +
ggtitle("Número de camas de los apartamentos de Airbnb") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(hjust = 0.5, size = 12),
axis.text = element_text(size = 12)) +
xlab("Número de camas") + ylab("Frecuencia") +
theme(legend.position = "top",
legend.title = element_blank(),
legend.text = element_text(size = 14),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title = element_text(size = 15, face = "bold"),
plot.title = element_text(size = 20, face = 'bold', hjust = 0.5, margin = margin(0, 20, 50, 0)))
boxplot_beds <- ggplot(data = airbnb_data, aes(x = beds)) +
geom_boxplot(color = "black", fill = "lightgreen") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(hjust = 0.5, size = 12),
axis.text = element_text(size = 12)) +
xlab("Número de camas")  + ylab("           ") +
theme(legend.position = "top",
legend.title = element_blank(),
legend.text = element_text(size = 14),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title = element_text(size = 15, face = "bold"),
plot.title = element_text(size = 20, face = 'bold', hjust = 0.5, margin = margin(0, 0, 10, 0)))
grafico_beds <- ggarrange(histograma_beds, boxplot_beds, nrow = 2, ncol = 1, heights = c(1, 0.6))
## SQUARE FEET
analisis_descriptivo_square_feet <- filter(analisis_descriptivo_numericas, variable == "square_feet")
histograma_square_feet <- ggplot(data = airbnb_data, aes(x = square_feet)) +
geom_histogram(color = "black", fill = "skyblue", binwidth = 200) +
geom_table_npc(data = analisis_descriptivo_square_feet, label = list(analisis_descriptivo_square_feet),
npcx = 0.00, npcy = 1, hjust = -0.25, vjust = -0.4) +
ggtitle("Superfície de los apartamentos de Airbnb") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(hjust = 0.5, size = 12),
axis.text = element_text(size = 12)) +
xlab(expression (m^2)) + ylab("Frecuencia") +
theme(legend.position = "top",
legend.title = element_blank(),
legend.text = element_text(size = 14),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title = element_text(size = 15, face = "bold"),
plot.title = element_text(size = 20, face = 'bold', hjust = 0.5, margin = margin(0, 10, 50, 0)))
boxplot_square_feet <- ggplot(data = airbnb_data, aes(x = square_feet)) +
geom_boxplot(color = "black", fill = "lightgreen") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(hjust = 0.5, size = 12),
axis.text = element_text(size = 12)) +
xlab(expression (m^2))  + ylab("           ") +
theme(legend.position = "top",
legend.title = element_blank(),
legend.text = element_text(size = 14),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title = element_text(size = 15, face = "bold"),
plot.title = element_text(size = 20, face = 'bold', hjust = 0.5, margin = margin(0, 0, 10, 0)))
grafico_square_feet <- ggarrange(histograma_square_feet, boxplot_square_feet, nrow = 2, ncol = 1, heights = c(1, 0.6))
## SECURITY DEPOSIT
analisis_descriptivo_security_deposit <- filter(analisis_descriptivo_numericas, variable == "security_deposit")
histograma_security_deposit <- ggplot(data = airbnb_data, aes(x = security_deposit)) +
geom_histogram(color = "black", fill = "skyblue", binwidth = 100) +
geom_table_npc(data = analisis_descriptivo_security_deposit, label = list(analisis_descriptivo_security_deposit),
npcx = 0.00, npcy = 1, hjust = -0.25, vjust = -0.4) +
ggtitle("Fianza de los apartamentos de Airbnb") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(hjust = 0.5, size = 12),
axis.text = element_text(size = 12)) +
xlab("Fianza ($)") + ylab("Frecuencia") + xlim(c(0, 1000)) +
theme(legend.position = "top",
legend.title = element_blank(),
legend.text = element_text(size = 14),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title = element_text(size = 15, face = "bold"),
plot.title = element_text(size = 20, face = 'bold', hjust = 0.5, margin = margin(0, 10, 50, 0)))
boxplot_security_deposit <- ggplot(data = airbnb_data, aes(x = security_deposit)) +
geom_boxplot(color = "black", fill = "lightgreen") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(hjust = 0.5, size = 12),
axis.text = element_text(size = 12)) +
xlab("Fianza ($)")  + ylab("           ") +
theme(legend.position = "top",
legend.title = element_blank(),
legend.text = element_text(size = 14),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title = element_text(size = 15, face = "bold"),
plot.title = element_text(size = 20, face = 'bold', hjust = 0.5, margin = margin(0, 0, 10, 0)))
grafico_security_deposit <- ggarrange(histograma_security_deposit, boxplot_security_deposit, nrow = 2, ncol = 1, heights = c(1, 0.6))
## NUMBER OF REVIEWS
analisis_descriptivo_number_of_reviews <- filter(analisis_descriptivo_numericas, variable == "number_of_reviews")
histograma_number_of_reviews <- ggplot(data = airbnb_data, aes(x = number_of_reviews)) +
geom_histogram(color = "black", fill = "skyblue") +
geom_table_npc(data = analisis_descriptivo_number_of_reviews, label = list(analisis_descriptivo_number_of_reviews),
npcx = 0.00, npcy = 1, hjust = -0.25, vjust = -0.4) +
ggtitle("Nº reviews de noches de los apartamentos de Airbnb") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(hjust = 0.5, size = 12),
axis.text = element_text(size = 12)) +
xlab("Número de reviews") + ylab("Frecuencia") +
theme(legend.position = "top",
legend.title = element_blank(),
legend.text = element_text(size = 14),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title = element_text(size = 15, face = "bold"),
plot.title = element_text(size = 20, face = 'bold',
hjust = 0.5, margin = margin(0, 0, 50, 0)))
boxplot_number_of_reviews <- ggplot(data = airbnb_data, aes(x = number_of_reviews)) +
geom_boxplot(color = "black", fill = "lightgreen") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(hjust = 0.5, size = 12),
axis.text = element_text(size = 12)) +
xlab("Número de reviews")  + ylab("           ") +
theme(legend.position = "top",
legend.title = element_blank(),
legend.text = element_text(size = 14),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title = element_text(size = 15, face = "bold"),
plot.title = element_text(size = 20, face = 'bold', hjust = 0.5, margin = margin(0, 0, 10, 0)))
grafico_number_of_reviews <- ggarrange(histograma_number_of_reviews, boxplot_number_of_reviews, nrow = 2, ncol = 1, heights = c(1, 0.6))
## REVIEW SCORES RATING
analisis_descriptivo_review_scores_rating <- filter(analisis_descriptivo_numericas, variable == "review_scores_rating")
histograma_review_scores_rating <- ggplot(data = airbnb_data, aes(x = review_scores_rating)) +
geom_histogram(color = "black", fill = "skyblue") +
geom_table_npc(data = analisis_descriptivo_review_scores_rating,
label = list(analisis_descriptivo_review_scores_rating),
npcx = 0.00, npcy = 1, hjust = -0.22, vjust = -0.4) +
ggtitle("Puntuación de los apartamentos de Airbnb") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(hjust = 0.5, size = 12),
axis.text = element_text(size = 12)) +
xlab("Puntuación") + ylab("Frecuencia") +
theme(legend.position = "top",
legend.title = element_blank(),
legend.text = element_text(size = 14),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title = element_text(size = 15, face = "bold"),
plot.title = element_text(size = 20, face = 'bold',
hjust = 0.5, margin = margin(0, 0, 50, 0)))
boxplot_review_scores_rating <- ggplot(data = airbnb_data, aes(x = review_scores_rating)) +
geom_boxplot(color = "black", fill = "lightgreen") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(hjust = 0.5, size = 12),
axis.text = element_text(size = 12)) +
xlab("Puntuación")  + ylab("           ") +
theme(legend.position = "top",
legend.title = element_blank(),
legend.text = element_text(size = 14),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title = element_text(size = 15, face = "bold"),
plot.title = element_text(size = 20, face = 'bold', hjust = 0.5, margin = margin(0, 0, 10, 0)))
grafico_review_scores_rating <- ggarrange(histograma_review_scores_rating, boxplot_review_scores_rating, nrow = 2, ncol = 1, heights = c(1, 0.6))
# VARIABLES CATEGÓRICAS
# host_since_year
tabla_proporciones_host_since_year <- as.data.frame(matrix(nrow = length(prop.table(table(airbnb_data$host_since_year))), ncol = 2))
tabla_proporciones_host_since_year[, 1] <- factor(names(prop.table(table(airbnb_data$host_since_year))))
tabla_proporciones_host_since_year[, 2] <- unname(prop.table(table(airbnb_data$host_since_year)))
tabla_proporciones_host_since_year[, 3] <- unname(table(airbnb_data$host_since_year))
colnames(tabla_proporciones_host_since_year) <- c("category", "prop", "count")
grafico_host_since_year <- ggplot(data = tabla_proporciones_host_since_year, aes(x = category,
y = prop)) +
geom_bar(stat = "identity", fill = "purple", alpha = 0.7) +
scale_y_continuous(labels = percent, limits = c(0, 0.34)) +
geom_text(data = tabla_proporciones_host_since_year, aes(label = paste0(round(prop*100, 1), "%", " (", count, ")"),
y = prop + 0.02), size = 4.5, color = "purple", alpha = 0.85) +
ggtitle("Año de registro en Airbnb del anfitrión") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(hjust = 0.5, size = 12),
axis.text = element_text(size = 12)) +
xlab("Año") + ylab("Frecuencia relativa") +
theme(legend.position = "none",
legend.title = element_blank(),
legend.text = element_text(size = 14),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title = element_text(size = 15, face = "bold"),
plot.title = element_text(size = 20, face = 'bold',
hjust = 0.3, margin = margin(0, 0, 10, 10)))
# neigbourhood
pal2 <- colorNumeric(
palette = "YlOrRd",
domain = neighbourhoods_geojson@data$listings
)
count_apartments_per_neighbourhood <- leaflet(neighbourhoods_geojson) %>%
addTiles() %>% setView(lng = 2.1734, lat = 41.3851, zoom = 12) %>%
addPolygons(stroke = TRUE, fillColor = ~ pal2(listings), fillOpacity = 0.8,
highlight = highlightOptions(weight = 2,
color = ~ pal2(listings),
fillOpacity = 1,
bringToFront = TRUE),
label = ~neighbourhood,
smoothFactor = 0.2,
popup = ~ paste(paste(neighbourhood,":"), "<br/>","<b/>", paste("Número de apartamentos: ", round(listings)))) %>%
addLegend("bottomright", pal = pal2, values = ~listings, opacity = 1.0,
title = "Número de apartamentos por barrio", na.label="")
# property_type
pal3 <- colorFactor(palette = c(
"dodgerblue2", "#E31A1C",
"green4",
"#6A3D9A",
"#FF7F00",
"black", "gold1",
"skyblue2", "#FB9A99",
"palegreen2",
"#CAB2D6",
"#FDBF6F",
"gray70", "khaki2",
"maroon", "orchid1", "deeppink1", "blue1", "steelblue4",
"darkturquoise", "green1"),
domain = airbnb_data$property_type)
# Ara creem un dataset per cada grup
typeofproperty <- list()
for (i in 1:length(levels(as.factor(airbnb_data$property_type)))) {
typeofproperty[[i]] <- airbnb_data %>% dplyr::filter(property_type == levels(as.factor(airbnb_data$property_type))[i])
}
names(typeofproperty) <- levels(as.factor(airbnb_data$property_type))
typeofproperty_map <- leaflet() %>% addTiles() %>% setView(lng = 2.1734, lat = 41.3851, zoom = 13)
for (i in 1:length(levels(as.factor(airbnb_data$property_type)))) {
typeofproperty_map <- typeofproperty_map %>% addCircles(data = typeofproperty[[i]], lat = ~latitude,
lng = ~longitude, color = ~pal3(property_type),
fillOpacity = 1, label = ~property_type,
popup = ~price, group = levels(as.factor(airbnb_data$property_type))[i])
}
typeofproperty_map <- typeofproperty_map %>% addLegend(data = airbnb_data, "topleft",
pal = pal3, values = ~property_type, title = "Tipo de propiedad",
opacity = 1, group = "Legend")
groups <- c("Legend", levels(as.factor(airbnb_data$property_type)))
typeofproperty_map <- typeofproperty_map %>% addLayersControl(overlayGroups = groups,
options = layersControlOptions(collapsed = TRUE))
# room_type
pal4 <- colorFactor(palette = c(
"dodgerblue2", "#E31A1C",
"green4",
"#6A3D9A",
"#FF7F00",
"black", "gold1",
"skyblue2", "#FB9A99",
"palegreen2",
"#CAB2D6",
"#FDBF6F",
"gray70", "khaki2",
"maroon", "orchid1", "deeppink1", "blue1", "steelblue4",
"darkturquoise", "green1"),
domain = airbnb_data$room_type)
# Ara creem un dataset per cada grup
room_type <- list()
for (i in 1:length(levels(as.factor(airbnb_data$room_type)))) {
room_type[[i]] <- airbnb_data %>% dplyr::filter(room_type == levels(as.factor(airbnb_data$room_type))[i])
}
names(room_type) <- levels(as.factor(airbnb_data$room_type))
room_type_map <- leaflet() %>% addTiles() %>% setView(lng = 2.1734, lat = 41.3851, zoom = 13)
for (i in 1:length(levels(as.factor(airbnb_data$room_type)))) {
room_type_map <- room_type_map %>% addCircles(data = room_type[[i]], lat = ~latitude,
lng = ~longitude, color = ~pal4(room_type),
fillOpacity = 1, label = ~room_type,
popup = ~price, group = levels(as.factor(airbnb_data$room_type))[i])
}
room_type_map <- room_type_map %>% addLegend(data = airbnb_data, "topleft",
pal = pal4, values = ~room_type, title = "Tipo de habitación",
opacity = 1, group = "Legend")
groups <- c("Legend", levels(as.factor(airbnb_data$room_type)))
room_type_map <- room_type_map %>% addLayersControl(overlayGroups = groups,
options = layersControlOptions(collapsed = TRUE))
tabla_proporciones_room_type <- as.data.frame(matrix(nrow = length(prop.table(table(airbnb_data$room_type))), ncol = 2))
tabla_proporciones_room_type[, 1] <- factor(names(prop.table(table(airbnb_data$room_type))))
tabla_proporciones_room_type[, 2] <- unname(prop.table(table(airbnb_data$room_type)))
tabla_proporciones_room_type[, 3] <- unname(table(airbnb_data$room_type))
colnames(tabla_proporciones_room_type) <- c("category", "prop", "count")
grafico_room_type <- ggplot(data = tabla_proporciones_room_type, aes(x = reorder(category, -prop),
y = prop, fill = category)) +
geom_bar(alpha = 0.85, stat = "identity") +
scale_y_continuous(labels = percent, limits = c(0,1)) +
geom_text(data = tabla_proporciones_room_type, aes(label = paste0(round(prop*100, 1), "%", " (", count, ")"),
y = prop + 0.15, color = category), size = 5) +
ggtitle("Tipo de habitación en Airbnb") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(hjust = 0.5, size = 12),
axis.text = element_text(size = 12)) +
xlab("Tipo de habitación") + ylab("Frecuencia relativa") + coord_flip() +
theme(legend.position = "none",
legend.title = element_blank(),
legend.text = element_text(size = 14),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title = element_text(size = 15, face = "bold"),
plot.title = element_text(size = 20, face = 'bold',
hjust = 0.3, margin = margin(0, 0, 10, 10)))
# Variables binarias
# Air conditioning
variable <- vector()
Yes <- vector()
No <- vector()
tabla_proporciones_variables_binarias <- data.frame(variable, Yes, No)
for (i in 16:(ncol(airbnb_data) - 1)){
yes_no <- unname(prop.table(table(airbnb_data[, i])))
tabla_proporciones_variables_binarias <- rbind(tabla_proporciones_variables_binarias, data.frame(variable = colnames(airbnb_data)[i], Yes = yes_no[1], No = yes_no[2]))
}
tabla_inicial_proporciones_variables_binarias <- gt(tabla_proporciones_variables_binarias) %>%
tab_header(title = md("Variables binarias: Frecuencias relativas"))
tabla_final_proporciones_variables_binarias <- fmt_percent(tabla_inicial_proporciones_variables_binarias, columns = c(2, 3))
str(airbnb_data)
airbnb_data[is.na(airbnb_data), ]
sum(is.na(airbnb_data))
sum(is.na(airbnb_data_viejo))
sum(airbnb_data_viejo)
sum(is.na(airbnb_data_viejo))
sum(airbnb_data_viejo)
sum(is.na(airbnb_data_viejo))
sum(is.na(airbnb_data_viejo))
sum(is.na(airbnb_data))
grafico_accommodates
analisis_descriptivo_accommodates <- filter(analisis_descriptivo_numericas, variable == "accommodates")
histograma_accommodates <- ggplot(data = airbnb_data, aes(x = accommodates)) +
geom_histogram(color = "black", fill = "skyblue", binwidth = 2) +
geom_table_npc(data = analisis_descriptivo_accommodates, label = list(analisis_descriptivo_accommodates),
npcx = 0.00, npcy = 1, hjust = -0.2, vjust = -0.4) +
ggtitle("Capacidad de huéspedes de los apartamentos de Airbnb") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(hjust = 0.5, size = 12),
axis.text = element_text(size = 12)) +
xlab("Número de huéspedes") + ylab("Frecuencia") +
theme(legend.position = "top",
legend.title = element_blank(),
legend.text = element_text(size = 14),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title = element_text(size = 15, face = "bold"),
plot.title = element_text(size = 20, face = 'bold', hjust = 0.5, margin = margin(0, 0, 50, 0)))
boxplot_accommodates <- ggplot(data = airbnb_data, aes(x = accommodates)) +
geom_boxplot(color = "black", fill = "lightgreen") +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(hjust = 0.5, size = 12),
axis.text = element_text(size = 12)) +
xlab("Número de huéspedes") + ylab("           ") +
theme(legend.position = "top",
legend.title = element_blank(),
legend.text = element_text(size = 14),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title = element_text(size = 15, face = "bold"),
plot.title = element_text(size = 20, face = 'bold', hjust = 0.5, margin = margin(0, 0, 10, 0)))
grafico_accommodates <- ggarrange(histograma_accommodates, boxplot_accommodates, nrow = 2, ncol = 1, heights = c(1, 0.6))
grafico_accommodates
ggplot(data = numeric_correlations, aes(x = reorder(Variables, Correlacion_precio), y = Correlacion_precio)) +
geom_bar(aes(fill = Correlacion_precio), stat = "identity") +
scale_fill_gradient(low = "blue", high = "red") + xlim(c(0, 0.8))
ggtitle("Correlación del precio y las demás variables numéricas.") +
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold", margin = margin(0, 0, 10, 0)),
axis.title = element_text(hjust = 0.5, size = 14),
axis.text.x = element_text(size = 16, angle = 90),
legend.position = "none",
legend.title = element_blank()) +
xlab("Numeric variable") + ylab("Coeficiente de correlación de Pearson") + coord_flip()
ggplot(data = numeric_correlations, aes(x = reorder(Variables, Correlacion_precio), y = Correlacion_precio)) +
geom_bar(aes(fill = Correlacion_precio), stat = "identity") +
scale_fill_gradient(low = "blue", high = "red") + xlim(c(0, 0.8)) +
ggtitle("Correlación del precio y las demás variables numéricas.") +
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold", margin = margin(0, 0, 10, 0)),
axis.title = element_text(hjust = 0.5, size = 14),
axis.text.x = element_text(size = 16, angle = 90),
legend.position = "none",
legend.title = element_blank()) +
xlab("Numeric variable") + ylab("Coeficiente de correlación de Pearson") + coord_flip()
ggplot(data = numeric_correlations, aes(x = reorder(Variables, Correlacion_precio), y = Correlacion_precio)) +
geom_bar(aes(fill = Correlacion_precio), stat = "identity") +
scale_fill_gradient(low = "blue", high = "red") +
ggtitle("Correlación del precio y las demás variables numéricas.") +
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold", margin = margin(0, 0, 10, 0)),
axis.title = element_text(hjust = 0.5, size = 14),
axis.text.x = element_text(size = 16, angle = 90),
legend.position = "none",
legend.title = element_blank()) +
xlab("Numeric variable") + ylab("Coeficiente de correlación de Pearson") + coord_flip()
numeric_correlations
boxplot_precio_air_conditioning <- ggplot(data = airbnb_data, aes(x = Air_conditioning, y = price,
fill = Air_conditioning)) +
geom_boxplot(color = "black", size = 0.5, alpha = 0.5) +
theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
axis.title = element_text(hjust = 0.5, size = 12),
axis.text = element_text(size = 12)) +
ylab("Precio por noche") + xlab("Disponibilidad de Aire Acondicionado")  +
scale_y_continuous(labels = function(x) paste0(x, "$")) +
ggtitle("Precio por noche según \
la disponibilidad de aire acondicionado") +
theme(legend.position = "none",
legend.title = element_text(size = 20),
legend.text = element_text(size = 14),
axis.text.x = element_text(size = 15, margin = margin(0, 0, 10, 0)),
axis.text.y = element_text(size = 15),
axis.title = element_text(size = 15, face = "bold"),
plot.title = element_text(size = 20, face = 'bold', hjust = 0.5, margin = margin(0, 0, 10, 0)))
boxplot_precio_air_conditioning
str(airbnb_data)
prop.table(table(airbnb_data$property_type))
room_type_map
prop.table(table(airbnb_data$room_type))
